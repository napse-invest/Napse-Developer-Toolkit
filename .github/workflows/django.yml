name: Django CI

on:
  # pull_request_target:
  workflow_run:
    workflows: [Check Source Branch]
    types:
      - completed
jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo 'The triggering workflow passed'
  authorize:
    environment: ${{ github.event.pull_request.head.repo.full_name != github.repository && 'external' || 'internal' }}
    runs-on: ubuntu-latest
    steps:
      - run: true

  build:
    name: Django build
    needs: authorize
    timeout-minutes: 30
    runs-on: ubuntu-latest
    environment: ${{ github.event.pull_request.head.repo.full_name != github.repository && 'external' || 'internal' }}
    strategy:
      max-parallel: 4

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Start containers
        run: make up

      - name: Lint with ruff
        run: |
          pip install ruff
          ruff .

      - name: Tests and coverage
        run: |
          make coverage

      - name: Coverage value
        run: |
          cvg_result=$(docker exec napse_dtk_dev_django coverage report --skip-covered | head -n -2 | tail -n 1 | awk '{print $NF}' | sed 's/%//')
          echo "COVERAGE=$cvg_result" >> $GITHUB_ENV
          echo $cvg_result

      - name: Coverage badge
        if: ${{ github.base_ref == 'main' }}
        uses: Schneegans/dynamic-badges-action@v1.6.0
        env:
          COVERAGE: ${{ env.COVERAGE }}
        with:
          auth: ${{ secrets.NAPSE_SECRET_GIST }}
          gistID: 40fac957532fe3b731c99067467de842
          filename: napse-developer-toolkit-coverage.json
          label: Coverage
          message: ${{ env.COVERAGE }}%
          valColorRange: ${{ env.COVERAGE }}
          minColorRange: 60
          maxColorRange: 100

      - name: Stop containers
        if: always()
        run: make down
