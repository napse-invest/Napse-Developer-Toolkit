version: '3'

volumes:
  napse_dtk_dev_postgres_data: {}
  napse_dtk_dev_postgres_data_backups: {}

services:
  django: &django
    build: 
      context: ..
      dockerfile: ./docker/compose/django/Dockerfile
    image: napse_dtk_django
    container_name: napse_dtk_django
    platform: linux/x86_64
    depends_on:
      - postgres
      - redis
    volumes:
      - ../.:/app:z
    env_file:
      - ../.envs/.development/.django
      - ../.envs/.development/.postgres
    command: /start
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`localhost`)"
      - "traefik.http.routers.django.entrypoints=web"
    expose:
      - "8000"

  postgres:
    build:
      context: ..
      dockerfile: ./docker/compose/postgres/Dockerfile
    image: napse_dtk_postgres
    container_name: napse_dtk_postgres
    volumes:
      - napse_dtk_dev_postgres_data:/var/lib/postgresql/data:Z
      - napse_dtk_dev_postgres_data_backups:/backups:z
    env_file:
      - ../.envs/.development/.postgres
    ports:
      - "5432:5432"

  redis:
    image: redis:6
    container_name: napsedjango_local_redis



# ------------------------------------------------------
# version: '3'

# volumes:
#   napsedjango_local_postgres_data: {}
#   napsedjango_local_postgres_data_backups: {}

# services:
#   django: &django
#     build:
#       context: .
#       dockerfile: ./compose/local/django/Dockerfile
#     image: napsedjango_local_django
#     container_name: napsedjango_local_django
#     platform: linux/x86_64
#     depends_on:
#       - postgres
#       - redis
#     volumes:
#       - .:/app:z
#     env_file:
#       - ./.envs/.local/.django
#       - ./.envs/.local/.postgres
#     command: /start

#     expose:
#       - "8000"

#   traefik:
#     image: "traefik:v2.9.5"
#     container_name: traefik
#     command:
#       - "--log.level=DEBUG"
#       - "--api.insecure=true"
#       - "--providers.docker=true"
#       - "--providers.docker.exposedbydefault=false"
#       - "--entrypoints.web.address=:8000"
#       - "--entrypoints.frontend.address=:3005"
#       - "--entrypoints.flower.address=:5555"
#     ports:
#       - "5555:5555"
#       - "8000:8000"
#       - "8080:8080"
#       - "3005:3005"
#     volumes:
#       - "/var/run/docker.sock:/var/run/docker.sock:ro"




#   celeryworker:
#     <<: *django
#     image: napsedjango_local_celeryworker
#     container_name: napsedjango_local_celeryworker
#     depends_on:
#       - redis
#       - postgres
#       - django
#     ports: []
#     command: /start-celeryworker
#     labels:
#       - "traefik.enable=false"

#   celerybeat:
#     <<: *django
#     image: napsedjango_local_celerybeat
#     container_name: napsedjango_local_celerybeat
#     depends_on:
#       - redis
#       - postgres
#       - django
#     ports: []
#     command: /start-celerybeat
#     labels:
#       - "traefik.enable=false"

#   flower:
#     <<: *django
#     image: napsedjango_local_flower
#     container_name: napsedjango_local_flower
#     command: /start-flower
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.flower.rule=Host(`localhost`)"
#       - "traefik.http.routers.flower.entrypoints=flower"
#     expose:
#       - "5555"

#   frontend:
#     build:
#       context: .
#       dockerfile: ./compose/local/frontend/Dockerfile
#     platform: linux/x86_64
#     image: frontend
#     container_name: frontend
#     depends_on:
#       - postgres
#       - redis
#     env_file:
#       - ./.envs/.local/.django
#       - ./.envs/.local/.postgres
#     command: /start
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.frontend.rule=Host(`localhost`)"
#       - "traefik.http.routers.frontend.entrypoints=frontend"
#     volumes:
#       - ../client:/app
#     expose:
#       - "3005"
